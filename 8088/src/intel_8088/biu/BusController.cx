/*
 * Copyright (c) 2015 Matthieu
 * All rights reserved.
 */
package intel_8088.biu;

task BusController {
	import intel_8088.Consts_8086.*;

	in u8 bus_data;
	in u2 eu_segment, sync u16 eu_addr, sync eu_data_in;

	in u20 addr_computed;
	out sync ready u8 instr;
	sync {
		out u20 addr, u8 data_o, u16 eu_data_out;
	}
	out u2 segment, u16 offset;

	u16 ip;

	void loop() {
		// as long as nothing from EU comes
		while (eu_addr.available) {
			if (instr.ready) {
				segment.write(REG_CS);
				offset.write(ip);
				ip++;

				// TODO do this differently, because we should not make the EU wait
				// for more than one cycle
				idle(1);

				addr.write(addr_computed.read);

				fence;

				// read data in
				print("read data");
				instr.write(bus_data.read());
			}
		}

		// EU wants to read or write, it has priority over fetch
		print("a");
		if (eu_data_in.available) {
			// write requested
			print("b");
		} else {
			// read requested
			print("c");
		}
	}

}
